const builder=e=>{let t,n,o,s,r;e=e.promise||e;let c=0;let i,a=0,l=0;let u,d=0;let m=0;const f=(t,s,r,p)=>{(async t=>!a||d<a?(a&&(d++,setTimeout(()=>{d--,u=null},l)),u=e(...t)):o?u:Promise.reject({code:429,message:"Too many requests",value:await u}))(t).then(e=>{c&&(i=e,setTimeout(()=>i=null,c)),n=null,s(e)}).catch(e=>{p<m?f(t,s,r,p+1):(n=null,r(e))})};let p=0;let h;const y={promise:async(...e)=>{if(i)return i;let o,c;return t=new Promise((e,t)=>{o=e,c=t}),n?r?o(n):c({code:102,message:"Async request already in progress",value:await n}):((e,o,r)=>{if(p){const c=t;h=t,setTimeout(async()=>{h!==c?s?o(h):r({code:409,message:"Async request be debounced",value:await h}):(h=null,n=c,f(e,o,r,0))},p)}else n=t,f(e,o,r,0)})(e,o,c),t},allow:(...e)=>(o=e.includes(429),s=e.includes(409),r=e.includes(102),y),cache:e=>(c=e,y),debounce:e=>(p=e,y),retries:e=>(m=e,y),throttle:(e,t)=>(a=e,l=t,y)};return y},_isFunction=e=>"function"==typeof e,_next=async(e,t,n,o,s,r,c)=>{(r.length?c(...await Promise.all(r)):c()).then(i=>{n.set(r,i),--s[0]||e([...n.values()].pop());const a=o.get(c);if(a)for(const r of a)r[r.indexOf(c)]=i,r.every(e=>!_isFunction(e))&&_next(e,t,n,o,s,r,n.get(r)).catch(e=>t(e))}).catch(e=>t(e))},_promise=e=>new Promise((t,n)=>{const o=new Map,s=new Map;for(const[t,n]of e){const e=[...t];o.set(e,n);for(const t of e)_isFunction(t)&&(s.has(t)?s.get(t).push(e):s.set(t,[e]))}const r=[o.size];for(const[e,c]of o)e.every(e=>!_isFunction(e))&&_next(t,n,o,s,r,e,c).catch(e=>n(e))}),dag=()=>{const e=new Map,t={promise:()=>_promise(e),add:(n,...o)=>(e.set(o.map(e=>e.promise||e),n.promise||n),t)};return t},_encode=(e,t,n)=>{if(t&&"object"==typeof t)if(t instanceof Array)for(let o in t)_encode(e,t[o],n+"%5B"+encodeURIComponent(o)+"%5D");else for(let o in t)_encode(e,t[o],n+"."+encodeURIComponent(o));else e.push(n+"="+encodeURIComponent(t))},_toQuery=e=>{if(!e)return"";const t=[];for(let n in e)_encode(t,e[n],encodeURIComponent(n));return"?"+t.join("&")},request=e=>{let t,n,o,s,r,c,i={"Content-Type":"application/json; charset=UTF-8"};const a=(e,a)=>{let l;if(!a||a instanceof FormData||(a=JSON.stringify(a)),c){const e=new AbortController;setTimeout(()=>e.abort(),c),l=e.signal}return{method:e,mode:t,cache:n,credentials:o,headers:i,redirect:s,referrerPolicy:r,signal:l,body:a}},l={mode:e=>(t=e,l),cache:e=>(n=e,l),credentials:e=>(o=e,l),headers:e=>(i={...i,...e},l),redirect:e=>(s=e,l),referrerPolicy:e=>(r=e,l),timeout:e=>(c=e,l),get:t=>fetch(e+_toQuery(t),a()),method:(t,n)=>fetch(e,a(t,n))};return l};export{builder,dag,request};